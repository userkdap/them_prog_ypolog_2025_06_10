##ΠΑΝΕΛΛΑΔΙΚΕΣ ΕΞΕΤΑΣΕΙΣ
##HMEΡΗΣΙΩΝ – ΕΣΠΕΡΙΝΩΝ ΕΠΑΓΓΕΛΜΑΤΙΚΩΝ ΛΥΚΕΙΩΝ
##ΤΡΙΤΗ 10 ΙΟΥΝΙΟΥ 2025
##ΕΞΕΤΑΖΟΜΕΝΟ ΜΑΘΗΜΑ:
##ΠΡΟΓΡΑΜΜΑΤΙΣΜΟΣ ΥΠΟΛΟΓΙΣΤΩΝ
##
##ΘΕΜΑ Δ
##Ένας φορέας Πιστοποίησης Γλωσσομάθειας διεξάγει ετήσιες εξετάσεις
##πιστοποίησης στη γλώσσα των Ισπανικών στις οποίες προσήλθαν τριακόσιοι
##(300) υποψήφιοι. Οι υποψήφιοι πρέπει να συμπληρώσουν ένα ηλεκτρονικό
##φύλλο αξιολόγησης που αποτελείται από δέκα (10) ερωτήσεις πολλαπλής
##επιλογής. Κάθε ερώτηση έχει τέσσερις (4) δυνατές απαντήσεις, οι οποίες
##χαρακτηρίζονται από τα γράμματα a, b, c και d. Μόνο μία από τις
##απαντήσεις a, b, c, d είναι η σωστή. Θεωρήστε ότι ο υποψήφιος για κάθε
##ερώτηση επιλέγει υποχρεωτικά μία και μόνο απάντηση. Κάθε σωστή απάντηση
##βαθμολογείται με πέντε (5) μονάδες, ενώ κάθε λανθασμένη βαθμολογείται με
##μηδέν (0) μονάδες. Οι σωστές απαντήσεις βρίσκονται στη λίστα ANS["a",
##"d", "b", "b", "a", "c", "d", "a", "b", "c"].
##Να αναπτύξετε πρόγραμμα σε γλώσσα προγραμματισμού Python το οποίο:
##Δ1. Για κάθε υποψήφιο:
##α) Να διαβάζει τον κωδικό του (ως συμβολοσειρά) και να τον καταχωρίζει
##σε λίστα με όνομα KOD. (μον. 2)
##β) Να διαβάζει από το πληκτρολόγιο διαδοχικά τις δέκα (10) απαντήσεις
##που έδωσε και να υπολογίζει τη συνολική βαθμολογία του, σύμφωνα με την
##περιγραφόμενη διαδικασία βαθμολόγησης και χρήση της λίστας ANS. Η λίστα
##ANS πρέπει να οριστεί στο πρόγραμμα. (μον. 9)
##γ) Να καταχωρίζει τη συνολική βαθμολογία του στη λίστα SB. (μον.1)
##Μονάδες 12
##Δ2. Να εμφανίζει τους κωδικούς των υποψηφίων που είχαν βαθμολογία
##μεγαλύτερη των τριάντα (30) μονάδων. Θεωρήστε ότι υπάρχει τουλάχιστον
##ένας (1) υποψήφιος με βαθμολογία μεγαλύτερη των τριάντα (30) μονάδων.
##Μονάδες 3
##Δ3. α) Να ταξινομεί τη λίστα SB με χρήση του αλγορίθμου ταξινόμησης της
##ευθείας ανταλλαγής (φυσαλίδα – bubble sort) σε φθίνουσα σειρά,
##αναδιατάσσοντας συγχρόνως τη λίστα KOD, ώστε να διατηρείται η
##αντιστοιχία κωδικών και συνολικών βαθμολογιών. (μον.4)
##β) Να δημιουργεί αρχείο κειμένου με όνομα "lang.txt", όπου σε κάθε
##γραμμή του θα γραφεί ο κωδικός του υποψηφίου, ακολουθούμενος από έναν
##κενό χαρακτήρα και τη συνολική του βαθμολογία. (μον.6)
##Μονάδες 10
##Σημείωση: Δεν απαιτούνται έλεγχοι ορθότητας δεδομένων.
##
KOD = []
SB = []
YPOPSIFIOI = 300
EROTISEIS = 10
ANS = ["a", "d", "b", "b", "a", "c", "d", "a", "b", "c"]
SWSTH = 5
ORIO = 30

for ypopsifios in range(1,YPOPSIFIOI+1):
    kod_ypops = input("Κωδικός υποψηφίου {}: ".format(ypopsifios))
    KOD.append(kod_ypops)
    synol_vathm = 0
    for erotisi in range(0,EROTISEIS):
        apantisi = input("Απάντηση στην ερώτηση {} [a, b, c, d]: ".format(erotisi+1))
        if apantisi == ANS[erotisi]:
            synol_vathm = synol_vathm + SWSTH
    SB.append(synol_vathm)

N = len(SB)
for i in range(N-1): # range(0, N–1, 1)
    for j in range(N-1 , i , -1): # μέχρι και i–1
        if SB[j] > SB[j-1]:
            SB[j], SB[j-1] = SB[j-1], SB[j]
            KOD[j], KOD[j-1] = KOD[j-1], KOD[j]

print("Κωδικοί υποψηφίων με βαθμολογία μεγαλύτερη των τριάντα (30) μονάδων")
print("-------------------------------------------------------------------")
i = 0
while i < len(SB) and SB[i] > ORIO:
    print("{}\t{}".format(KOD[i], SB[i]))
    i += 1

try:
    OUTPUTFILENAME="lang.txt"
    with open(OUTPUTFILENAME, 'w', encoding="utf-8") as outputfile:
        for i in range(len(SB)):
            line = KOD[i] + " " + str(SB[i]) + "\n"
            outputfile.write(line)
except Exception as err:
    print("Σφάλμα στην εγγραφή του αρχείου εξόδου!", err)
